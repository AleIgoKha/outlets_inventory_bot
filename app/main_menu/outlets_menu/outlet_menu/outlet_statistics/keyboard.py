from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import date, datetime
from calendar import monthrange

from app.database.requests.reports import is_there_report


# –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
stats_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üìù –î–Ω–µ–≤–Ω—ã–µ –æ—Ç—á–µ—Ç—ã', callback_data='outlet:statistics:express')],
    [InlineKeyboardButton(text='üìà –ü—Ä–æ–¥–∞–∂–∏ –∑–∞ 7 –¥–Ω–µ–π', url='https://apache-superset-production.up.railway.app/superset/dashboard/p/4exGEz5MBVm/')],
    [InlineKeyboardButton(text='üìñ –ü—Ä–æ–¥–∞–∂–∏ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è', url='https://apache-superset-production.up.railway.app/superset/dashboard/p/Yo7DWqLML8d/')],
    [InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='outlet:back')]
])


# –ö–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
async def calendar_keyboard(outlet_id, year: int, month: int) -> InlineKeyboardMarkup:
    """
    Creates an inline keyboard representing a calendar for the given year and month.
    """
    keyboard = []
    months = {
    1: "–Ø–Ω–≤–∞—Ä—å",
    2: "–§–µ–≤—Ä–∞–ª—å",
    3: "–ú–∞—Ä—Ç",
    4: "–ê–ø—Ä–µ–ª—å",
    5: "–ú–∞–π",
    6: "–ò—é–Ω—å",
    7: "–ò—é–ª—å",
    8: "–ê–≤–≥—É—Å—Ç",
    9: "–°–µ–Ω—Ç—è–±—Ä—å",
    10: "–û–∫—Ç—è–±—Ä—å",
    11: "–ù–æ—è–±—Ä—å",
    12: "–î–µ–∫–∞–±—Ä—å"}
    keyboard.append([InlineKeyboardButton(text=f'{year} {months[month]}', callback_data="ignore")])
    days_of_week = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"]
    keyboard.append([InlineKeyboardButton(text=day, callback_data="ignore") for day in days_of_week])

    first_day = date(year, month, 1)
    first_day_weekday = first_day.weekday()  # Monday is 0, Sunday is 6
    days_in_month = monthrange(year, month)[1]
    day_counter = 1

    for week in range(6):  # Up to 6 weeks can be displayed
        row = []
        for day_of_week in range(7):
            if week == 0 and day_of_week < first_day_weekday:
                row.append(InlineKeyboardButton(text=" ", callback_data="ignore"))
            elif day_counter > days_in_month:
                row.append(InlineKeyboardButton(text=" ", callback_data="ignore"))
            else:
                day_text = str(day_counter)
                check_flag = await is_there_report(outlet_id, datetime(year, month, day_counter))
                if day_counter == date.today().day and month == date.today().month and year == date.today().year:
                    day_text = 'üåû'
                # –µ—Å–ª–∏ –∑–∞ –¥–µ–Ω—å –±—ã–ª–∏ –ø—Ä–æ–¥–∞—é—â–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, —Ç–æ —Å—Ç–∞–≤–∏–º –≥–∞–ª–æ—á–∫—É –≤–æ–∑–ª–µ –¥–∞—Ç—ã
                if check_flag:
                    day_text += ' ‚úîÔ∏è'
                callback_data = f"outlet:statistics:date:{year}:{month}:{day_counter}"
                row.append(InlineKeyboardButton(text=day_text, callback_data=callback_data))
                day_counter += 1
        keyboard.append(row)
        if day_counter > days_in_month:
            break

    navigation_buttons = [
        InlineKeyboardButton(text="‚¨ÖÔ∏è –†–∞–Ω–µ–µ", callback_data=f"outlet:statistics:month:prev:{year}:{month}"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="outlet:statistics"),
        InlineKeyboardButton(text="‚û°Ô∏è –ü–æ–∑–¥–Ω–µ–µ", callback_data=f"outlet:statistics:month:next:{year}:{month}"),
    ]
    keyboard.append(navigation_buttons)

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


# –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
back_button = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚úçÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç—á–µ—Ç', callback_data='outlet:statistics:amend_report')],
    [InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='outlet:statistics:express')]
])

# –º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
report_creation = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üìù –°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç', callback_data='outlet:statistics:create_report')],
    [InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='outlet:statistics:express')]
])


# –º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞
def report_menu(report):
    
    inline_keyboard = []
  
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–µ–∫–æ–≤
    button_text = ''
    purchases = report['purchases']
    if not purchases is None:
        button_text = ' ‚úÖ'
            
    inline_keyboard.append([InlineKeyboardButton(text=f'üßæ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–∫–æ–≤{button_text}', callback_data='outlet:statistics:create_report:purchases')])
    
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤—ã—Ä—É—á–∫–∏
    button_text = ''
    revenue = report['revenue']
    if not revenue is None:
        button_text = ' ‚úÖ'
        
    inline_keyboard.append([InlineKeyboardButton(text=f'üíµ –°—É–º–º–∞ –≤—ã—Ä—É—á–∫–∏{button_text}', callback_data='outlet:statistics:create_report:revenue')])
    
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è
    button_text = ''      
    note = report['note']
    if not note is None:
        button_text = ' ‚úÖ'

    inline_keyboard.append([InlineKeyboardButton(text=f'‚úçÔ∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ{button_text}', callback_data='outlet:statistics:create_report:note')])
    
    button_text = ''
    inline_keyboard.append([InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='outlet:statistics:express'),
                            InlineKeyboardButton(text='‚òëÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data='outlet:statistics:create_report:send_report')])
    
    return  InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


# –∫–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
cancel_button = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='outlet:statistics:create_report')]

])

# –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
confirm_report = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='outlet:statistics:create_report'),
    InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='outlet:statistics:create_report:send_report:confirm')]
])