import pytz
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime

from app.database.requests.stock import get_active_stock_products
from app.database.requests.transactions import balance_transactions_number_today, were_stock_transactions

# –º–µ–Ω—é —Å–µ—Å—Å–∏–∏
async def report_menu(outlet_id, report):
    today = datetime.now(pytz.timezone('Europe/Chisinau'))
    
    inline_keyboard = []

    # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ —É–∫–∞–∑–∞–Ω–∏—é –æ—Å—Ç–∞—Ç–∫–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–≤–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ç–æ–≤–∞—Ä–æ–≤ —Å –Ω—É–ª–µ–≤—ã–º 
    button_text = ''
    stock_data = await get_active_stock_products(outlet_id)
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –±–∏–ª–∏ –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ –¥–µ–Ω—å —Å —Ç–æ–≤–∞—Ä–æ–º, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    # –µ—Å–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –±—ã–ª–æ, —Ç–æ –≤–æ–≤–¥–∏–º –µ—Å–ª–∏ –±–∞–ª–∞–Ω—Å –±–æ–ª—å—à–µ –Ω—É–ª—è, –µ—Å–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –±—ã–ª–∞, —Ç–æ –≤—ã–≤–æ–¥–∏–º –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
    # —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –±—É–¥—É—Ç –≤—ã–≤–µ–¥–µ–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –±—ã–ª–∞ –∏–ª–∏ –º–æ–≥–ª–∞ –±—ã—Ç—å –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
    stock_data = [stock for stock in stock_data if await were_stock_transactions(stock['stock_id'],
                                                                                 today,
                                                                                 ['balance'])
                                                or  stock['stock_qty'] != 0]
    
    transactions_number = await balance_transactions_number_today(outlet_id)
    
    if len(stock_data) == transactions_number:
        button_text = ' ‚úÖ'

    inline_keyboard.append([InlineKeyboardButton(text=f'üßÆ –û—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤{button_text}', callback_data='outlet:balance')])
    
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–µ–∫–æ–≤
    button_text = ''
    purchases = report['purchases']
    if not purchases is None:
        button_text = ' ‚úÖ'
            
    inline_keyboard.append([InlineKeyboardButton(text=f'üßæ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–∫–æ–≤{button_text}', callback_data='outlet:report_menu:purchases')])
    
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤—ã—Ä—É—á–∫–∏
    button_text = ''
    revenue = report['revenue']
    if not revenue is None:
        button_text = ' ‚úÖ'
        
    inline_keyboard.append([InlineKeyboardButton(text=f'üíµ –°—É–º–º–∞ –≤—ã—Ä—É—á–∫–∏{button_text}', callback_data='outlet:report_menu:revenue')])
    
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è
    button_text = ''      
    note = report['note']
    if not note is None:
        button_text = ' ‚úÖ'

    inline_keyboard.append([InlineKeyboardButton(text=f'‚úçÔ∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ{button_text}', callback_data='outlet:report_menu:note')])
    
    button_text = ''
    inline_keyboard.append([InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='outlet:back'),
                            InlineKeyboardButton(text='‚òëÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data='outlet:report_menu:send_report')])
    
    return  InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


# –∫–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
cancel_button = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='outlet:report_menu')]

])

# –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
confirm_report = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='outlet:report_menu'),
    InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='outlet:report_menu:send_report:confirm')]
])